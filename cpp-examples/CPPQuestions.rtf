{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\b\fs24 \cf0 How do virtual functions work in C++?\

\b0 - Programmers mark functions as virtual - this means that child classes can override a method defined by the parent\
- At compile time, a "VTable" is built for each class that stores the addresses of virtual functions\
- The vtable points at the "most derived" class.  If the method is not implemented in the subclass, the vtable points at the parent class for a particular method.\
- Dynamic binding works through the vtable mechanism.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\b \cf0 What is the difference between a shallow and a deep copy for objects, and describe how each is used?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\b0 \cf0 - Shallow object copy just copies the members, including the pointer references.\
- Deep copy does this, but also allocates and copies memory for any pointer references.\
- Shallow copy is dangerous, especially when creating or deleting objects.  You might use it to pass information about an object without actually duplicating the data, for example, with a large hash map.\
- Deep copy is less error prone, and should be especially used when the object members are small.\
\

\b Why does the destructor in a base class need to be declared "virtual"?\

\b0 - If you didn't do this, parts of the object might not be deleted properly in some situations.  Eg - if you declare a pointer to Parent(), instantiate it as a Child(), then call delete, the parent destructor will get called and not the child.\
- Virtual ensures the "most derived" destructor gets called.  The compiler ensures the destructor of the subclass automatically gets called.\
\
\
}